Q.

Create Account class having instance member 
1. id- id should be generated by application, it is readonly property
2. name – write getter setter 
3. balance- Write getter setter 
It has deposit method who’s job is to increase the balance.
Declare static float Interestrate=0.07.
It has withdraw method who’s job is to reduce balance.
Declare conts float minbal=1000. When user withdraw money your application should ensure that minimum balance is maintain. 
Give appropriate validation like user can not deposit or withdraw 0 or negative. user can not open account with 0 amount
When you run your application at the beginning it should print name of bank and copy right detail.
It has static method which will calculate and return  interest amount for each account holder and increase the balance.
Write display method who’s job is to display Id name and balance and interest received.
If you are comfortable the exception try to use it and handle it also.
  
Solution:

using System;
using System.Collections.Generic;
using System.Configuration;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace DAC
{
    class Account
    {
        int id;
        static int getid;
        string name;
        double balance;
        static float Interestrate = 0.07f;
        const float minbal = 1000;

        public Account(string nm, double bal) 
        {
            id = ++getid; Name=nm; Balance=bal; 
        }
        public double Balance
        {
            get{return balance;}
            set {
                if(value < 0)
                {
                    throw new Exception("Balance should be greater than zero");
                }
                balance = value; }
        }
        public string Name
        {
            get { return name;}
            set { name = value; }
        }
        public int ID
        {
            get { return getid; }
        }
        public void deposit(int a)
        {
            if(a< 0)
            {
                throw new Exception("Amount which is negative or zero can not be deposited");
            }
            balance = balance+ a;
        }
        public void withdraw(int amt)
        {
            if ((balance + minbal) <= amt)
            {
                throw new Exception("Balance is very low to withdraw this amount");
            }
            if(amt <= 0){
                throw new Exception("You can not withdraw amount which is zero or negative");
            }
            else
            {
                balance -= amt;
            }
        }
        static double Calint(Account a)
        {
            double b=a.Balance * Interestrate ;
            a.balance += b;
            return b;

        }
        public string display()
        {
           double a=Calint(this);
            return string.Format("{0} {1} {2} {3}",ID,Name,Balance,a);
        }


        public static void Main()
        {
            try
            {
                Account a = new Account("Mayur", 400000);
                Console.WriteLine(a.display());
            }
            catch (Exception e) { Console.WriteLine("zero value not allowed"); }
            
        }

    }
    

}




Q.Create a class Employee having private instance member 
id- id is readonly property and generated by your application
name- write getter setter
salary- write getter setter
net salary
Write method who’s job is to deduct TDS 10% and return tax amount and set netsalary instance member after deducting tax.
Declare TDS as static variable.
Your application should create only 3 object if you try to create 4th object it should throw exception.
Give appropriate validation like salary can not be 0 or negative, maximum
Salary allowed is 50000 if you try to set more then 50000 it should give some error message.
When you run your application it should print name of company.

solution:

using System;
using System.Collections.Generic;
using System.Configuration;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace DAC
{
    class Employee
    {
        static Employee()
        {
            Console.WriteLine("Cosmos Technologies");
        }
        int id;
        static int getid;
        string name;
        double salary;
        double net_salary;
        static float tds = 0.1f;
        const int a = 3;
        public Employee(string name,double sal)
        {
            if (a <= getid)
            {
                throw new Exception("only three objects can be created");
            }
            else
            {
                id = ++getid;
                Name = name;
                Salary = sal;
            }
        }
        public int ID
        {
            get { return id; }
        }
        public string Name
        {
            get { return name; }
            set { name = value; }
        }
        public double Salary
        {
            get { return salary; }
            set {
                if (value <= 0)
                    throw new Exception("Salary should be greater than zero");
                if (value >=50000)
                    throw new Exception("Error");
		else
                	salary = value; }
        }
        public double deduct()
        {
            double a = salary * tds;
            net_salary = a;
            return a;
        }
        public static void Main()
        {
            Employee e1 = new Employee("mayur", 5000);
            Employee e2 = new Employee("mayur", 5000);
            Employee e3 = new Employee("mayur", 5000);
            Employee e4 = new Employee("mayur", 5000);


        }

    }
    

}















