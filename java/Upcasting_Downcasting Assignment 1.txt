public class Course
{
	public void start()
	{
	}
	public void stop()
	{
	}
}
now define 3 child classes 
	DACDBDACourse,MSCit and Basic

inside "DACDBDACourse" class define one more method "public void orientation()"

define one more class "CourseDemo" with main function.
inside main function
	create an array of "Course" of 3 elements.
store all the child classes objects. Traverse the array and invoke "start()" and "stop()" of all the objects. Also invoke "orientation()" method wherever object of "DACDBDACourse" is present.



package test;
class Course
{
	public void start()
	{
		System.out.println("Starting new course...");
	}
	public void stop()
	{
		System.out.println("Course stoppped...");
	}
}
class DACDBDACourse extends Course{
	public void orientation() {
		System.out.println("orientation started of DACDBDACourse");
	}
	public void start()
	{
		System.out.println("Starting new course DACDBDACourse...");
	}
	public void stop()
	{
		System.out.println("Course stoppped DACDBDACourse...");
	}
}
class MSCit extends Course{
	public void start()
	{
		System.out.println("Starting new course MSCit...");
	}
	public void stop()
	{
		System.out.println("Course stoppped MSCit...");
	}
}
class Basic extends Course{
	public void start()
	{
		System.out.println("Starting new course Basic...");
	}
	public void stop()
	{
		System.out.println("Course stoppped Basic...");
	}
}
public class CourseDemo{
	public static void main(String[] args) {
		Course arr[]=new Course[3];
		arr[0]=new DACDBDACourse();
		arr[1]=new MSCit();
		arr[2]=new Basic();
		for(int i=0;i<arr.length;i++) {
			arr[i].start();
			arr[i].stop();
			if(arr[i] instanceof DACDBDACourse) {
				DACDBDACourse temp=(DACDBDACourse)arr[i]; 
				temp.orientation();
			}
		}
	}
}